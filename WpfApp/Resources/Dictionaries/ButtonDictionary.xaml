<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="Default" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="BlueButton" TargetType="Button" BasedOn="{StaticResource Default}">
        <Setter Property="Background" Value="#0074e5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF1381EC"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF0064C5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GrayButton" TargetType="Button" BasedOn="{StaticResource Default}">
        <Setter Property="Background" Value="#FF1F1F1F"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF2E2E2E"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FF151515"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource Default}">
        <Setter Property="Background" Value="#FF1F1F1F"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#E62E4C"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Background" Value="#FFA62036"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavbarToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#FF121212"/>
            </Trigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF212121"/>
            </MultiTrigger>
            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseCaptureWithin" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF080808"/>
            </MultiTrigger>
            
            
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="#FF1F1F1F"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF2E2E2E"/>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseCaptureWithin" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF151515"/>
            </MultiTrigger>
            
        </Style.Triggers>
    </Style>

    <Style x:Key="RequestToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="#FF121212"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF191919"/>
            </MultiTrigger>
            
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#FF1F1F1F"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#FF2E2E2E"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>