<UserControl x:Class="WpfApp.Visual.MainWindow.GlobalElements.Menus.SettingsMenu.SettingsControl.SettingsList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp.Visual.MainWindow.GlobalElements.Menus.SettingsMenu.SettingsControl"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="800" >
    <Grid x:Name="Grid" Background="#FF121212">
        <TextBlock x:Name="ProfileTextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Profile:" VerticalAlignment="Top" Height ="20" Width="114" TextAlignment="Right" Foreground="White"/>
        <TextBox x:Name="ProfileTextBox" Background="#FF353535" HorizontalAlignment="Left" Height="20" Margin="129,0,0,0" TextWrapping="Wrap" Text="Main" VerticalAlignment="Top" Width="312" Foreground="White" BorderBrush="#FF7A7A7A"/>
        <ComboBox x:Name="ProfileComboBox" Background="#FF353535" HorizontalAlignment="Left" Margin="441,0,0,0" VerticalAlignment="Top" Width="120" Height="20"
                   Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" Foreground="WhiteSmoke" BorderBrush="#FF7A7A7A">
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="#FF353535"/>
                    <Setter Property="BorderBrush" Value="#FF353535"/>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Button x:Name="ChangeProfileButton" Content="Change Profile" HorizontalAlignment="Left" Margin="561,0,0,0" VerticalAlignment="Top" Height="20" Width="100" Foreground="White">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF1F1F1F"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF2E2E2E"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter Property="Background" Value="#FF151515"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="Expand" Content="Expand" Height="20"
             HorizontalAlignment="Left" Margin="715,0,0,0" VerticalAlignment="Top" Width="75" Foreground="White" Click="Expand_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF1F1F1F"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF2E2E2E"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter Property="Background" Value="#FF151515"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="RenameProfileTextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Rename Profile:" VerticalAlignment="Top" Height ="20" Width="114" Margin="0,20,0,0" TextAlignment="Right" Foreground="White"/>
        <TextBox x:Name="RenameProfileTextBox" Background="#FF353535" HorizontalAlignment="Left" Height="20" Margin="129,20,0,0" TextWrapping="Wrap" Text="Main" VerticalAlignment="Top" Width="312" Foreground="White" BorderBrush="#FF7A7A7A"/>
        <ComboBox x:Name="RenameProfileComboBox" Background="#FF353535" HorizontalAlignment="Left" Margin="441,20,0,0" VerticalAlignment="Top" Width="120" Height="20"
            Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" Foreground="WhiteSmoke" BorderBrush="#FF7A7A7A">
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="#FF353535"/>
                    <Setter Property="BorderBrush" Value="#FF353535"/>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Button x:Name="RenameProfileButton" Content="Rename Profile" HorizontalAlignment="Left" Margin="561,20,0,0" VerticalAlignment="Top" Height="20" Width="100" Foreground="White">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF1F1F1F"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF2E2E2E"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter Property="Background" Value="#FF151515"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="RemoveProfileTextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Remove Profile:" VerticalAlignment="Top" Height ="20" Width="114" Margin="0,40,0,0" TextAlignment="Right" Foreground="White"/>
        <ComboBox x:Name="RemoveProfileComboBox" Background="#FF353535" HorizontalAlignment="Left" Margin="129,40,0,0" VerticalAlignment="Top" Width="432" Height="20"
            Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}" Foreground="WhiteSmoke" BorderBrush="#FF7A7A7A">
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Background" Value="#FF353535"/>
                    <Setter Property="BorderBrush" Value="#FF353535"/>
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
        <Button x:Name="RemoveProfileButton" Content="Remove Profile" HorizontalAlignment="Left" Margin="561,40,0,0" VerticalAlignment="Top" Height="20" Width="100" Foreground="White">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF1F1F1F"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF2E2E2E"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter Property="Background" Value="#FF151515"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="AddProfileTextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Add Profile:" VerticalAlignment="Top" Height ="20" Width="114" Margin="0,60,0,0" TextAlignment="Right" Foreground="White"/>
        <TextBox x:Name="AddProfileTextBox" Background="#FF353535" HorizontalAlignment="Left" Height="20" Margin="129,60,0,0" TextWrapping="Wrap" Text="Main" VerticalAlignment="Top" Width="432" Foreground="White" BorderBrush="#FF7A7A7A"/>
        <Button x:Name="AddProfileButton" Content="Add Profile" HorizontalAlignment="Left" Margin="561,60,0,0" VerticalAlignment="Top" Height="20" Width="100" Foreground="White">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF1F1F1F"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF2E2E2E"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptureWithin" Value="True">
                            <Setter Property="Background" Value="#FF151515"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</UserControl>
